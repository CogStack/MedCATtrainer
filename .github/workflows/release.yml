name: release-build

on:
  push:
    tags: ["v*.*.*"]

jobs:
  # Test, build and publish client library
  test-and-publish-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: "main"

      - name: Release Tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pytest build twine

      - name: Install client package in development mode
        run: |
          cd client
          pip install -e .

      - name: Run client tests
        run: |
          cd client
          python -m pytest tests/ -v

      - name: Build client package
        run: |
          cd client
          python -m build

      - name: Publish production distribution to PyPI
        if: startsWith(github.ref, 'refs/tags') && ! github.event.release.prerelease
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  # Build and test webapp container
  build-and-push:
    runs-on: ubuntu-latest
    needs: test-and-publish-client
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: "main"

      - name: Release Tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Build
        env:
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: |
          docker build -t cogstacksystems/medcat-trainer:$IMAGE_TAG -t cogstacksystems/medcat-trainer:latest webapp/.
      - name: Run Django Tests
        env:
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: |
          # run tests
          docker run --rm cogstacksystems/medcat-trainer:$IMAGE_TAG python manage.py test

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to DockerHub
        env:
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: |
          docker push cogstacksystems/medcat-trainer:$IMAGE_TAG
          docker push cogstacksystems/medcat-trainer:latest
